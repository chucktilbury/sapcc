/* This file is generated by SAPCC. Edits may be lost. */
#ifndef _SIMPLE_SCANNER_H
#define _SIMPLE_SCANNER_H

typedef enum {
    _TOK_NAMESPACE = 500,
    _TOK_CLASS = 501,
    _TOK_CREATE = 502,
    _TOK_DESTROY = 503,
    _TOK_IF = 504,
    _TOK_ELSE = 505,
    _TOK_WHILE = 506,
    _TOK_DO = 507,
    _TOK_FOR = 508,
    _TOK_IN = 509,
    _TOK_TO = 510,
    _TOK_TRY = 511,
    _TOK_EXCEPT = 512,
    _TOK_RAISE = 513,
    _TOK_RETURN = 514,
    _TOK_EXIT = 515,
    _TOK_SWITCH = 516,
    _TOK_CASE = 517,
    _TOK_YIELD = 518,
    _TOK_TRACE = 519,
    _TOK_PRINT = 520,
    _TOK_IMPORT = 521,
    _TOK_TRUE = 522,
    _TOK_FALSE = 523,
    _TOK_BREAK = 524,
    _TOK_CONTINUE = 525,
    _TOK_INLINE = 526,
    _TOK_ENTRY = 527,
    _TOK_DEFAULT = 528,
    _TOK_DOT = 529,
    _TOK_COMMA = 530,
    _TOK_COLON = 531,
    _TOK_AS = 532,
    _TOK_CPAREN = 533,
    _TOK_OPAREN = 534,
    _TOK_OBLOCK = 535,
    _TOK_CBLOCK = 536,
    _TOK_OBRACE = 537,
    _TOK_CBRACE = 538,
    _TOK_STRG_CONST = 539,
    _TOK_SYMBOL = 540,
    _TOK_FLOAT_CONST = 541,
    _TOK_INT_CONST = 542,
    _TOK_UNSIGNED_CONST = 543,
    _TOK_PUBLIC = 544,
    _TOK_PRIVATE = 545,
    _TOK_PROTECTED = 546,
    _TOK_INTEGER = 547,
    _TOK_UNSIGNED = 548,
    _TOK_FLOAT = 549,
    _TOK_STRING = 550,
    _TOK_DICT = 551,
    _TOK_LIST = 552,
    _TOK_BOOLEAN = 553,
    _TOK_NOTHING = 554,
    _TOK_ASSIGN = 555,
    _TOK_ADD = 556,
    _TOK_SUB = 557,
    _TOK_MUL = 558,
    _TOK_DIV = 559,
    _TOK_MOD = 560,
    _TOK_POW = 561,
    _TOK_NOT = 562,
    _TOK_OR = 563,
    _TOK_AND = 564,
    _TOK_EQU = 565,
    _TOK_NEQU = 566,
    _TOK_LORE = 567,
    _TOK_GORE = 568,
    _TOK_OPOINT = 569,
    _TOK_CPOINT = 570,
    _TOK_ADD_ASSIGN = 571,
    _TOK_SUB_ASSIGN = 572,
    _TOK_MUL_ASSIGN = 573,
    _TOK_DIV_ASSIGN = 574,
    _TOK_MOD_ASSIGN = 575,
} TokenType;

typedef struct {
    Str* str;
    TokenType type;
    int line_no;
    int col_no;
    Str* fname;
} Token;

extern Token token;

/*
    Public Interface.
 */
Token* create_token();
void open_file(const char* fname);
Token* get_token();
void consume_token();
const char* tok_to_str(TokenType type);


#endif

